{"version":3,"sources":["helpers/index.js","pages/Transactions/styles.js","pages/Transactions/components/ItemTransaction.js","../node_modules/@material-ui/core/esm/List/List.js","../node_modules/@material-ui/core/esm/Divider/Divider.js","pages/Transactions/components/ListTransactions.js","pages/Transactions/Transactions.js"],"names":["convertMoney","price","currency","convert","BRL","value","currencylib","symbol","separator","decimal","precision","formatWithSymbol","USD","format","cashbackCalculate","transactions","amount","feedback_score","forEach","trans","seller_feedback_score","price_value","cashback_percentage","cashback_amount","average_feedback_score","length","BoxDivider","styled","div","useStyles","makeStyles","theme","root","flexGrow","category","fontSize","color","palette","text","secondary","product","fontWeight","percentage","success","dark","ItemTransaction","transaction","classes","price_currency","useMemo","button","alt","charAt","container","direction","justify","item","xs","lg","component","noWrap","className","align","List","React","props","ref","children","_props$component","Component","_props$dense","dense","_props$disablePadding","disablePadding","subheader","other","_objectWithoutProperties","context","ListContext","Provider","_extends","clsx","padding","withStyles","listStyle","margin","position","paddingTop","paddingBottom","name","Divider","_props$absolute","absolute","_props$flexItem","flexItem","_props$light","light","_props$orientation","orientation","_props$role","role","undefined","_props$variant","variant","vertical","height","border","flexShrink","backgroundColor","divider","bottom","left","width","inset","marginLeft","fade","middle","spacing","marginRight","alignSelf","ListTransactions","useContext","ClienteContenxt","client","map","Fragment","key","date","Transactions"],"mappings":"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","file":"static/js/2.10dae65d.chunk.js","sourcesContent":["import currencylib from 'currency.js';\n\nexport const convertMoney = (price, currency = 'BRL') => {\n  const convert = {\n    BRL: (value) =>\n      currencylib(value, {\n        symbol: 'R$ ',\n        separator: '.',\n        decimal: ',',\n        precision: 2,\n        formatWithSymbol: true,\n      }),\n    USD: (value) =>\n      currencylib(value, {\n        symbol: '$ ',\n        separator: '.',\n        decimal: ',',\n        precision: 2,\n      }),\n  }[currency];\n  return convert(price).format();\n};\n\nexport const cashbackCalculate = (transactions) => {\n  let amount = 0.0;\n  let feedback_score = 0;\n  transactions.forEach((trans) => {\n    const { seller_feedback_score, price_value, cashback_percentage } = trans;\n    amount += price_value * cashback_percentage;\n    feedback_score += seller_feedback_score;\n  });\n  return {\n    cashback_amount: convertMoney(amount),\n    average_feedback_score: feedback_score / transactions.length,\n  };\n};\n","import styled from 'styled-components';\n\nexport const BoxDivider = styled.div`\n  display: flex;\n  height: 30px;\n  width: 56px;\n  justify-content: center;\n  padding-left: 16px;\n  :last-child {\n    display: none;\n  }\n`;\n","import React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport { convertMoney } from 'helpers';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  category: {\n    fontSize: '0.9em',\n    color: theme.palette.text.secondary,\n  },\n  product: {\n    fontSize: '1.1em',\n    fontWeight: 'bold',\n  },\n  price: {\n    fontWeight: 'bold',\n  },\n  percentage: {\n    fontWeight: 'bold',\n    fontSize: '0.9em',\n    color: theme.palette.success.dark,\n  },\n}));\n\nconst ItemTransaction = ({ transaction }) => {\n  const classes = useStyles();\n  const { product, category, cashback_percentage, price_currency, price_value } = transaction;\n  const price = useMemo(() => convertMoney(price_value, price_currency), [price_value]);\n  return (\n    <>\n      <ListItem button>\n        <ListItemAvatar>\n          <Avatar alt={category}>{category.charAt(0)}</Avatar>\n        </ListItemAvatar>\n        <Grid container direction=\"row\" justify=\"space-between\">\n          <Grid item xs={6} lg=\"auto\">\n            <Typography component=\"p\" noWrap color=\"light\" className={classes.category}>\n              {category}\n            </Typography>\n            <Typography component=\"p\" className={classes.product}>\n              {product}\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Typography component=\"p\" align=\"right\" className={classes.price}>\n              {price}\n            </Typography>\n            <Typography component=\"p\" align=\"right\" className={classes.percentage}>\n              {cashback_percentage}% de volta\n            </Typography>\n          </Grid>\n        </Grid>\n      </ListItem>\n    </>\n  );\n};\n\nItemTransaction.propTypes = {\n  transaction: PropTypes.shape({\n    category: PropTypes.string,\n    product: PropTypes.string,\n    cashback_percentage: PropTypes.number,\n    price_currency: PropTypes.string,\n    price_value: PropTypes.number,\n  }),\n};\n\nexport default ItemTransaction;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListContext from './ListContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    listStyle: 'none',\n    margin: 0,\n    padding: 0,\n    position: 'relative'\n  },\n\n  /* Styles applied to the root element if `disablePadding={false}`. */\n  padding: {\n    paddingTop: 8,\n    paddingBottom: 8\n  },\n\n  /* Styles applied to the root element if dense. */\n  dense: {},\n\n  /* Styles applied to the root element if a `subheader` is provided. */\n  subheader: {\n    paddingTop: 0\n  }\n};\nvar List = React.forwardRef(function List(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'ul' : _props$component,\n      _props$dense = props.dense,\n      dense = _props$dense === void 0 ? false : _props$dense,\n      _props$disablePadding = props.disablePadding,\n      disablePadding = _props$disablePadding === void 0 ? false : _props$disablePadding,\n      subheader = props.subheader,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"dense\", \"disablePadding\", \"subheader\"]);\n\n  var context = React.useMemo(function () {\n    return {\n      dense: dense\n    };\n  }, [dense]);\n  return /*#__PURE__*/React.createElement(ListContext.Provider, {\n    value: context\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, dense && classes.dense, !disablePadding && classes.padding, subheader && classes.subheader),\n    ref: ref\n  }, other), subheader, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? List.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input will be used for\n   * the list and list items.\n   * The prop is available to descendant components as the `dense` context.\n   */\n  dense: PropTypes.bool,\n\n  /**\n   * If `true`, vertical padding will be removed from the list.\n   */\n  disablePadding: PropTypes.bool,\n\n  /**\n   * The content of the subheader, normally `ListSubheader`.\n   */\n  subheader: PropTypes.node\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiList'\n})(List);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      height: 1,\n      margin: 0,\n      // Reset browser default style.\n      border: 'none',\n      flexShrink: 0,\n      backgroundColor: theme.palette.divider\n    },\n\n    /* Styles applied to the root element if `absolute={true}`. */\n    absolute: {\n      position: 'absolute',\n      bottom: 0,\n      left: 0,\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `variant=\"inset\"`. */\n    inset: {\n      marginLeft: 72\n    },\n\n    /* Styles applied to the root element if `light={true}`. */\n    light: {\n      backgroundColor: fade(theme.palette.divider, 0.08)\n    },\n\n    /* Styles applied to the root element if `variant=\"middle\"`. */\n    middle: {\n      marginLeft: theme.spacing(2),\n      marginRight: theme.spacing(2)\n    },\n\n    /* Styles applied to the root element if `orientation=\"vertical\"`. */\n    vertical: {\n      height: '100%',\n      width: 1\n    },\n\n    /* Styles applied to the root element if `flexItem={true}`. */\n    flexItem: {\n      alignSelf: 'stretch',\n      height: 'auto'\n    }\n  };\n};\nvar Divider = React.forwardRef(function Divider(props, ref) {\n  var _props$absolute = props.absolute,\n      absolute = _props$absolute === void 0 ? false : _props$absolute,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'hr' : _props$component,\n      _props$flexItem = props.flexItem,\n      flexItem = _props$flexItem === void 0 ? false : _props$flexItem,\n      _props$light = props.light,\n      light = _props$light === void 0 ? false : _props$light,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      _props$role = props.role,\n      role = _props$role === void 0 ? Component !== 'hr' ? 'separator' : undefined : _props$role,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'fullWidth' : _props$variant,\n      other = _objectWithoutProperties(props, [\"absolute\", \"classes\", \"className\", \"component\", \"flexItem\", \"light\", \"orientation\", \"role\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'fullWidth' && classes[variant], absolute && classes.absolute, flexItem && classes.flexItem, light && classes.light, orientation === 'vertical' && classes.vertical),\n    role: role,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Divider.propTypes = {\n  /**\n   * Absolutely position the element.\n   */\n  absolute: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, a vertical divider will have the correct height when used in flex container.\n   * (By default, a vertical divider will have a calculated height of `0px` if it is the child of a flex container.)\n   */\n  flexItem: PropTypes.bool,\n\n  /**\n   * If `true`, the divider will have a lighter color.\n   */\n  light: PropTypes.bool,\n\n  /**\n   * The divider orientation.\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * @ignore\n   */\n  role: PropTypes.string,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['fullWidth', 'inset', 'middle'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDivider'\n})(Divider);","import React, { useContext } from 'react';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport { ClienteContenxt } from 'contexts';\nimport { BoxDivider } from '../styles';\nimport ItemTransaction from './ItemTransaction';\n\nconst ListTransactions = () => {\n  const { client = null } = useContext(ClienteContenxt);\n  if (!client) return null;\n  const { transactions } = client;\n  return (\n    <List>\n      {transactions.map((trans) => (\n        <React.Fragment key={`${trans.product}-${trans.date}`}>\n          <ItemTransaction transaction={trans} />\n          <BoxDivider>\n            <Divider orientation=\"vertical\" />\n          </BoxDivider>\n        </React.Fragment>\n      ))}\n    </List>\n  );\n};\n\nListTransactions.propTypes = {};\n\nexport default ListTransactions;\n","import React from 'react';\nimport { Typography, Container } from '@material-ui/core';\nimport ListTransactions from './components/ListTransactions';\n\nconst Transactions = () => {\n  return (\n    <Container>\n      <Typography variant=\"h6\" className=\"font-weight-bold\">\n        Transações\n      </Typography>\n      <ListTransactions />\n    </Container>\n  );\n};\n\nexport default Transactions;\n"],"sourceRoot":""}