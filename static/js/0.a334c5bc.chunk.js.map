{"version":3,"sources":["../node_modules/@material-ui/core/esm/List/ListContext.js","../node_modules/@material-ui/core/esm/ListItemAvatar/ListItemAvatar.js","../node_modules/@material-ui/core/esm/ListItemText/ListItemText.js","../node_modules/@material-ui/core/esm/Typography/Typography.js","../node_modules/@material-ui/core/esm/internal/svg-icons/Person.js","../node_modules/@material-ui/core/esm/utils/createSvgIcon.js","../node_modules/@material-ui/core/esm/Avatar/Avatar.js","../node_modules/@material-ui/core/esm/ListItem/ListItem.js","../node_modules/@material-ui/core/esm/utils/isMuiElement.js"],"names":["ListContext","React","ListItemAvatar","props","ref","classes","className","other","_objectWithoutProperties","context","_extends","clsx","root","alignItems","alignItemsFlexStart","withStyles","minWidth","flexShrink","marginTop","name","ListItemText","children","_props$disableTypogra","disableTypography","_props$inset","inset","primaryProp","primary","primaryTypographyProps","secondaryProp","secondary","secondaryTypographyProps","dense","type","Typography","variant","component","display","color","multiline","flex","marginBottom","paddingLeft","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","_props$align","align","_props$color","_props$display","_props$gutterBottom","gutterBottom","_props$noWrap","noWrap","_props$paragraph","paragraph","_props$variant","_props$variantMapping","variantMapping","Component","concat","capitalize","theme","margin","typography","caption","button","overline","srOnly","position","height","width","overflow","alignLeft","textAlign","alignCenter","alignRight","alignJustify","textOverflow","whiteSpace","colorInherit","colorPrimary","palette","main","colorSecondary","colorTextPrimary","text","colorTextSecondary","colorError","error","displayInline","displayBlock","createSvgIcon","path","displayName","memo","forwardRef","createElement","SvgIcon","muiName","d","Avatar","alt","childrenProp","_props$component","imgProps","sizes","src","srcSet","loaded","_ref","_React$useState","setLoaded","active","image","Image","onload","onerror","useLoaded","hasImg","hasImgNotFailing","img","Person","fallback","system","colorDefault","justifyContent","fontFamily","fontSize","pxToRem","lineHeight","borderRadius","userSelect","background","default","backgroundColor","grey","circle","rounded","shape","square","objectFit","textIndent","useEnhancedEffect","window","ListItem","_props$alignItems","_props$autoFocus","autoFocus","_props$button","componentProp","_props$ContainerCompo","ContainerComponent","_props$ContainerProps","ContainerProps","ContainerClassName","_props$dense","_props$disabled","disabled","_props$disableGutters","disableGutters","_props$divider","divider","focusVisibleClassName","_props$selected","selected","childContext","listItemRef","current","focus","element","muiNames","toArray","hasSecondaryAction","length","indexOf","handleOwnRef","instance","ReactDOM","handleRef","useForkRef","componentProps","gutters","secondaryAction","focusVisible","ButtonBase","Provider","value","container","pop","textDecoration","boxSizing","paddingTop","paddingBottom","action","opacity","borderBottom","backgroundClip","paddingRight","transition","transitions","create","duration","shortest","hover"],"mappings":"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","file":"static/js/0.a334c5bc.chunk.js","sourcesContent":["import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar ListContext = React.createContext({});\n\nif (process.env.NODE_ENV !== 'production') {\n  ListContext.displayName = 'ListContext';\n}\n\nexport default ListContext;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListContext from '../List/ListContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    minWidth: 56,\n    flexShrink: 0\n  },\n\n  /* Styles applied to the root element when the parent `ListItem` uses `alignItems=\"flex-start\"`. */\n  alignItemsFlexStart: {\n    marginTop: 8\n  }\n};\n/**\n * A simple wrapper to apply `List` styles to an `Avatar`.\n */\n\nvar ListItemAvatar = React.forwardRef(function ListItemAvatar(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  var context = React.useContext(ListContext);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, context.alignItems === 'flex-start' && classes.alignItemsFlexStart),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemAvatar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component – normally `Avatar`.\n   */\n  children: PropTypes.element.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemAvatar'\n})(ListItemAvatar);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport ListContext from '../List/ListContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    flex: '1 1 auto',\n    minWidth: 0,\n    marginTop: 4,\n    marginBottom: 4\n  },\n\n  /* Styles applied to the `Typography` components if primary and secondary are set. */\n  multiline: {\n    marginTop: 6,\n    marginBottom: 6\n  },\n\n  /* Styles applied to the `Typography` components if dense. */\n  dense: {},\n\n  /* Styles applied to the root element if `inset={true}`. */\n  inset: {\n    paddingLeft: 56\n  },\n\n  /* Styles applied to the primary `Typography` component. */\n  primary: {},\n\n  /* Styles applied to the secondary `Typography` component. */\n  secondary: {}\n};\nvar ListItemText = React.forwardRef(function ListItemText(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      _props$inset = props.inset,\n      inset = _props$inset === void 0 ? false : _props$inset,\n      primaryProp = props.primary,\n      primaryTypographyProps = props.primaryTypographyProps,\n      secondaryProp = props.secondary,\n      secondaryTypographyProps = props.secondaryTypographyProps,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"disableTypography\", \"inset\", \"primary\", \"primaryTypographyProps\", \"secondary\", \"secondaryTypographyProps\"]);\n\n  var _React$useContext = React.useContext(ListContext),\n      dense = _React$useContext.dense;\n\n  var primary = primaryProp != null ? primaryProp : children;\n\n  if (primary != null && primary.type !== Typography && !disableTypography) {\n    primary = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: dense ? 'body2' : 'body1',\n      className: classes.primary,\n      component: \"span\",\n      display: \"block\"\n    }, primaryTypographyProps), primary);\n  }\n\n  var secondary = secondaryProp;\n\n  if (secondary != null && secondary.type !== Typography && !disableTypography) {\n    secondary = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: \"body2\",\n      className: classes.secondary,\n      color: \"textSecondary\",\n      display: \"block\"\n    }, secondaryTypographyProps), secondary);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, dense && classes.dense, inset && classes.inset, primary && secondary && classes.multiline),\n    ref: ref\n  }, other), primary, secondary);\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemText.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Alias for the `primary` prop.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the children won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `children` (or `primary`) text, and optional `secondary` text\n   * with the Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * If `true`, the children will be indented.\n   * This should be used if there is no left avatar or left icon.\n   */\n  inset: PropTypes.bool,\n\n  /**\n   * The main content element.\n   */\n  primary: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the primary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  primaryTypographyProps: PropTypes.object,\n\n  /**\n   * The secondary content element.\n   */\n  secondary: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the secondary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  secondaryTypographyProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemText'\n})(ListItemText);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      margin: 0\n    },\n\n    /* Styles applied to the root element if `variant=\"body2\"`. */\n    body2: theme.typography.body2,\n\n    /* Styles applied to the root element if `variant=\"body1\"`. */\n    body1: theme.typography.body1,\n\n    /* Styles applied to the root element if `variant=\"caption\"`. */\n    caption: theme.typography.caption,\n\n    /* Styles applied to the root element if `variant=\"button\"`. */\n    button: theme.typography.button,\n\n    /* Styles applied to the root element if `variant=\"h1\"`. */\n    h1: theme.typography.h1,\n\n    /* Styles applied to the root element if `variant=\"h2\"`. */\n    h2: theme.typography.h2,\n\n    /* Styles applied to the root element if `variant=\"h3\"`. */\n    h3: theme.typography.h3,\n\n    /* Styles applied to the root element if `variant=\"h4\"`. */\n    h4: theme.typography.h4,\n\n    /* Styles applied to the root element if `variant=\"h5\"`. */\n    h5: theme.typography.h5,\n\n    /* Styles applied to the root element if `variant=\"h6\"`. */\n    h6: theme.typography.h6,\n\n    /* Styles applied to the root element if `variant=\"subtitle1\"`. */\n    subtitle1: theme.typography.subtitle1,\n\n    /* Styles applied to the root element if `variant=\"subtitle2\"`. */\n    subtitle2: theme.typography.subtitle2,\n\n    /* Styles applied to the root element if `variant=\"overline\"`. */\n    overline: theme.typography.overline,\n\n    /* Styles applied to the root element if `variant=\"srOnly\"`. Only accessible to screen readers. */\n    srOnly: {\n      position: 'absolute',\n      height: 1,\n      width: 1,\n      overflow: 'hidden'\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `nowrap={true}`. */\n    noWrap: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `gutterBottom={true}`. */\n    gutterBottom: {\n      marginBottom: '0.35em'\n    },\n\n    /* Styles applied to the root element if `paragraph={true}`. */\n    paragraph: {\n      marginBottom: 16\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"textPrimary\"`. */\n    colorTextPrimary: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `color=\"textSecondary\"`. */\n    colorTextSecondary: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `display=\"inline\"`. */\n    displayInline: {\n      display: 'inline'\n    },\n\n    /* Styles applied to the root element if `display=\"block\"`. */\n    displayBlock: {\n      display: 'block'\n    }\n  };\n};\nvar defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p'\n};\nvar Typography = React.forwardRef(function Typography(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'initial' : _props$color,\n      component = props.component,\n      _props$display = props.display,\n      display = _props$display === void 0 ? 'initial' : _props$display,\n      _props$gutterBottom = props.gutterBottom,\n      gutterBottom = _props$gutterBottom === void 0 ? false : _props$gutterBottom,\n      _props$noWrap = props.noWrap,\n      noWrap = _props$noWrap === void 0 ? false : _props$noWrap,\n      _props$paragraph = props.paragraph,\n      paragraph = _props$paragraph === void 0 ? false : _props$paragraph,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'body1' : _props$variant,\n      _props$variantMapping = props.variantMapping,\n      variantMapping = _props$variantMapping === void 0 ? defaultVariantMapping : _props$variantMapping,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"color\", \"component\", \"display\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"]);\n\n  var Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'inherit' && classes[variant], color !== 'initial' && classes[\"color\".concat(capitalize(color))], noWrap && classes.noWrap, gutterBottom && classes.gutterBottom, paragraph && classes.paragraph, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], display !== 'initial' && classes[\"display\".concat(capitalize(display))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes = {\n  /**\n   * Set the text-align on the component.\n   */\n  align: PropTypes.oneOf(['inherit', 'left', 'center', 'right', 'justify']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   * Overrides the behavior of the `variantMapping` prop.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Controls the display type\n   */\n  display: PropTypes.oneOf(['initial', 'block', 'inline']),\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  gutterBottom: PropTypes.bool,\n\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   */\n  noWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'caption', 'button', 'overline', 'srOnly', 'inherit']),\n\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   */\n  variantMapping: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTypography'\n})(Typography);","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport SvgIcon from '../SvgIcon';\n/**\n * Private module reserved for @material-ui/x packages.\n */\n\nexport default function createSvgIcon(path, displayName) {\n  var Component = React.memo(React.forwardRef(function (props, ref) {\n    return /*#__PURE__*/React.createElement(SvgIcon, _extends({\n      ref: ref\n    }, props), path);\n  }));\n\n  if (process.env.NODE_ENV !== 'production') {\n    Component.displayName = \"\".concat(displayName, \"Icon\");\n  }\n\n  Component.muiName = SvgIcon.muiName;\n  return Component;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Person from '../internal/svg-icons/Person';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      flexShrink: 0,\n      width: 40,\n      height: 40,\n      fontFamily: theme.typography.fontFamily,\n      fontSize: theme.typography.pxToRem(20),\n      lineHeight: 1,\n      borderRadius: '50%',\n      overflow: 'hidden',\n      userSelect: 'none'\n    },\n\n    /* Styles applied to the root element if not `src` or `srcSet`. */\n    colorDefault: {\n      color: theme.palette.background.default,\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[600]\n    },\n\n    /* Styles applied to the root element if `variant=\"circle\"`. */\n    circle: {},\n\n    /* Styles applied to the root element if `variant=\"rounded\"`. */\n    rounded: {\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `variant=\"square\"`. */\n    square: {\n      borderRadius: 0\n    },\n\n    /* Styles applied to the img element if either `src` or `srcSet` is defined. */\n    img: {\n      width: '100%',\n      height: '100%',\n      textAlign: 'center',\n      // Handle non-square image. The property isn't supported by IE 11.\n      objectFit: 'cover',\n      // Hide alt text.\n      color: 'transparent',\n      // Hide the image broken icon, only works on Chrome.\n      textIndent: 10000\n    },\n\n    /* Styles applied to the fallback icon */\n    fallback: {\n      width: '75%',\n      height: '75%'\n    }\n  };\n};\n\nfunction useLoaded(_ref) {\n  var src = _ref.src,\n      srcSet = _ref.srcSet;\n\n  var _React$useState = React.useState(false),\n      loaded = _React$useState[0],\n      setLoaded = _React$useState[1];\n\n  React.useEffect(function () {\n    if (!src && !srcSet) {\n      return undefined;\n    }\n\n    setLoaded(false);\n    var active = true;\n    var image = new Image();\n    image.src = src;\n    image.srcSet = srcSet;\n\n    image.onload = function () {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('loaded');\n    };\n\n    image.onerror = function () {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('error');\n    };\n\n    return function () {\n      active = false;\n    };\n  }, [src, srcSet]);\n  return loaded;\n}\n\nvar Avatar = React.forwardRef(function Avatar(props, ref) {\n  var alt = props.alt,\n      childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      imgProps = props.imgProps,\n      sizes = props.sizes,\n      src = props.src,\n      srcSet = props.srcSet,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'circle' : _props$variant,\n      other = _objectWithoutProperties(props, [\"alt\", \"children\", \"classes\", \"className\", \"component\", \"imgProps\", \"sizes\", \"src\", \"srcSet\", \"variant\"]);\n\n  var children = null; // Use a hook instead of onError on the img element to support server-side rendering.\n\n  var loaded = useLoaded({\n    src: src,\n    srcSet: srcSet\n  });\n  var hasImg = src || srcSet;\n  var hasImgNotFailing = hasImg && loaded !== 'error';\n\n  if (hasImgNotFailing) {\n    children = /*#__PURE__*/React.createElement(\"img\", _extends({\n      alt: alt,\n      src: src,\n      srcSet: srcSet,\n      sizes: sizes,\n      className: classes.img\n    }, imgProps));\n  } else if (childrenProp != null) {\n    children = childrenProp;\n  } else if (hasImg && alt) {\n    children = alt[0];\n  } else {\n    children = /*#__PURE__*/React.createElement(Person, {\n      className: classes.fallback\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, classes.system, classes[variant], className, !hasImgNotFailing && classes.colorDefault),\n    ref: ref\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? Avatar.propTypes = {\n  /**\n   * Used in combination with `src` or `srcSet` to\n   * provide an alt attribute for the rendered `img` element.\n   */\n  alt: PropTypes.string,\n\n  /**\n   * Used to render icon or text elements inside the Avatar if `src` is not set.\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Attributes applied to the `img` element if the component is used to display an image.\n   * It can be used to listen for the loading error event.\n   */\n  imgProps: PropTypes.object,\n\n  /**\n   * The `sizes` attribute for the `img` element.\n   */\n  sizes: PropTypes.string,\n\n  /**\n   * The `src` attribute for the `img` element.\n   */\n  src: PropTypes.string,\n\n  /**\n   * The `srcSet` attribute for the `img` element.\n   * Use this attribute for responsive image display.\n   */\n  srcSet: PropTypes.string,\n\n  /**\n   * The shape of the avatar.\n   */\n  variant: PropTypes.oneOf(['circle', 'rounded', 'square'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAvatar'\n})(Avatar);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nimport isMuiElement from '../utils/isMuiElement';\nimport useForkRef from '../utils/useForkRef';\nimport ListContext from '../List/ListContext';\nimport * as ReactDOM from 'react-dom';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the (normally root) `component` element. May be wrapped by a `container`. */\n    root: {\n      display: 'flex',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n      position: 'relative',\n      textDecoration: 'none',\n      width: '100%',\n      boxSizing: 'border-box',\n      textAlign: 'left',\n      paddingTop: 8,\n      paddingBottom: 8,\n      '&$focusVisible': {\n        backgroundColor: theme.palette.action.selected\n      },\n      '&$selected, &$selected:hover': {\n        backgroundColor: theme.palette.action.selected\n      },\n      '&$disabled': {\n        opacity: 0.5\n      }\n    },\n\n    /* Styles applied to the `container` element if `children` includes `ListItemSecondaryAction`. */\n    container: {\n      position: 'relative'\n    },\n\n    /* Pseudo-class applied to the `component`'s `focusVisibleClassName` prop if `button={true}`. */\n    focusVisible: {},\n\n    /* Styles applied to the `component` element if dense. */\n    dense: {\n      paddingTop: 4,\n      paddingBottom: 4\n    },\n\n    /* Styles applied to the `component` element if `alignItems=\"flex-start\"`. */\n    alignItemsFlexStart: {\n      alignItems: 'flex-start'\n    },\n\n    /* Pseudo-class applied to the inner `component` element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the inner `component` element if `divider={true}`. */\n    divider: {\n      borderBottom: \"1px solid \".concat(theme.palette.divider),\n      backgroundClip: 'padding-box'\n    },\n\n    /* Styles applied to the inner `component` element if `disableGutters={false}`. */\n    gutters: {\n      paddingLeft: 16,\n      paddingRight: 16\n    },\n\n    /* Styles applied to the inner `component` element if `button={true}`. */\n    button: {\n      transition: theme.transitions.create('background-color', {\n        duration: theme.transitions.duration.shortest\n      }),\n      '&:hover': {\n        textDecoration: 'none',\n        backgroundColor: theme.palette.action.hover,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the `component` element if `children` includes `ListItemSecondaryAction`. */\n    secondaryAction: {\n      // Add some space to avoid collision as `ListItemSecondaryAction`\n      // is absolutely positioned.\n      paddingRight: 48\n    },\n\n    /* Pseudo-class applied to the root element if `selected={true}`. */\n    selected: {}\n  };\n};\nvar useEnhancedEffect = typeof window === 'undefined' ? React.useEffect : React.useLayoutEffect;\n/**\n * Uses an additional container component if `ListItemSecondaryAction` is the last child.\n */\n\nvar ListItem = React.forwardRef(function ListItem(props, ref) {\n  var _props$alignItems = props.alignItems,\n      alignItems = _props$alignItems === void 0 ? 'center' : _props$alignItems,\n      _props$autoFocus = props.autoFocus,\n      autoFocus = _props$autoFocus === void 0 ? false : _props$autoFocus,\n      _props$button = props.button,\n      button = _props$button === void 0 ? false : _props$button,\n      childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      componentProp = props.component,\n      _props$ContainerCompo = props.ContainerComponent,\n      ContainerComponent = _props$ContainerCompo === void 0 ? 'li' : _props$ContainerCompo,\n      _props$ContainerProps = props.ContainerProps;\n  _props$ContainerProps = _props$ContainerProps === void 0 ? {} : _props$ContainerProps;\n\n  var ContainerClassName = _props$ContainerProps.className,\n      ContainerProps = _objectWithoutProperties(_props$ContainerProps, [\"className\"]),\n      _props$dense = props.dense,\n      dense = _props$dense === void 0 ? false : _props$dense,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$divider = props.divider,\n      divider = _props$divider === void 0 ? false : _props$divider,\n      focusVisibleClassName = props.focusVisibleClassName,\n      _props$selected = props.selected,\n      selected = _props$selected === void 0 ? false : _props$selected,\n      other = _objectWithoutProperties(props, [\"alignItems\", \"autoFocus\", \"button\", \"children\", \"classes\", \"className\", \"component\", \"ContainerComponent\", \"ContainerProps\", \"dense\", \"disabled\", \"disableGutters\", \"divider\", \"focusVisibleClassName\", \"selected\"]);\n\n  var context = React.useContext(ListContext);\n  var childContext = {\n    dense: dense || context.dense || false,\n    alignItems: alignItems\n  };\n  var listItemRef = React.useRef(null);\n  useEnhancedEffect(function () {\n    if (autoFocus) {\n      if (listItemRef.current) {\n        listItemRef.current.focus();\n      } else if (process.env.NODE_ENV !== 'production') {\n        console.error('Material-UI: Unable to set focus to a ListItem whose component has not been rendered.');\n      }\n    }\n  }, [autoFocus]);\n  var children = React.Children.toArray(childrenProp);\n  var hasSecondaryAction = children.length && isMuiElement(children[children.length - 1], ['ListItemSecondaryAction']);\n  var handleOwnRef = React.useCallback(function (instance) {\n    // #StrictMode ready\n    listItemRef.current = ReactDOM.findDOMNode(instance);\n  }, []);\n  var handleRef = useForkRef(handleOwnRef, ref);\n\n  var componentProps = _extends({\n    className: clsx(classes.root, className, childContext.dense && classes.dense, !disableGutters && classes.gutters, divider && classes.divider, disabled && classes.disabled, button && classes.button, alignItems !== \"center\" && classes.alignItemsFlexStart, hasSecondaryAction && classes.secondaryAction, selected && classes.selected),\n    disabled: disabled\n  }, other);\n\n  var Component = componentProp || 'li';\n\n  if (button) {\n    componentProps.component = componentProp || 'div';\n    componentProps.focusVisibleClassName = clsx(classes.focusVisible, focusVisibleClassName);\n    Component = ButtonBase;\n  }\n\n  if (hasSecondaryAction) {\n    // Use div by default.\n    Component = !componentProps.component && !componentProp ? 'div' : Component; // Avoid nesting of li > li.\n\n    if (ContainerComponent === 'li') {\n      if (Component === 'li') {\n        Component = 'div';\n      } else if (componentProps.component === 'li') {\n        componentProps.component = 'div';\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(ListContext.Provider, {\n      value: childContext\n    }, /*#__PURE__*/React.createElement(ContainerComponent, _extends({\n      className: clsx(classes.container, ContainerClassName),\n      ref: handleRef\n    }, ContainerProps), /*#__PURE__*/React.createElement(Component, componentProps, children), children.pop()));\n  }\n\n  return /*#__PURE__*/React.createElement(ListContext.Provider, {\n    value: childContext\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    ref: handleRef\n  }, componentProps), children));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItem.propTypes = {\n  /**\n   * Defines the `align-items` style property.\n   */\n  alignItems: PropTypes.oneOf(['flex-start', 'center']),\n\n  /**\n   * If `true`, the list item will be focused during the first mount.\n   * Focus will also be triggered if the value changes from false to true.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the list item will be a button (using `ButtonBase`). Props intended\n   * for `ButtonBase` can then be applied to `ListItem`.\n   */\n  button: PropTypes.bool,\n\n  /**\n   * The content of the component. If a `ListItemSecondaryAction` is used it must\n   * be the last child.\n   */\n  children: chainPropTypes(PropTypes.node, function (props) {\n    var children = React.Children.toArray(props.children); // React.Children.toArray(props.children).findLastIndex(isListItemSecondaryAction)\n\n    var secondaryActionIndex = -1;\n\n    for (var i = children.length - 1; i >= 0; i -= 1) {\n      var child = children[i];\n\n      if (isMuiElement(child, ['ListItemSecondaryAction'])) {\n        secondaryActionIndex = i;\n        break;\n      }\n    } //  is ListItemSecondaryAction the last child of ListItem\n\n\n    if (secondaryActionIndex !== -1 && secondaryActionIndex !== children.length - 1) {\n      return new Error('Material-UI: You used an element after ListItemSecondaryAction. ' + 'For ListItem to detect that it has a secondary action ' + 'you must pass it as the last child to ListItem.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   * By default, it's a `li` when `button` is `false` and a `div` when `button` is `true`.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The container component used when a `ListItemSecondaryAction` is the last child.\n   */\n  ContainerComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the container component if used.\n   */\n  ContainerProps: PropTypes.object,\n\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input will be used.\n   */\n  dense: PropTypes.bool,\n\n  /**\n   * If `true`, the list item will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * If `true`, a 1px light border is added to the bottom of the list item.\n   */\n  divider: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * Use to apply selected styling.\n   */\n  selected: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItem'\n})(ListItem);","import * as React from 'react';\nexport default function isMuiElement(element, muiNames) {\n  return React.isValidElement(element) && muiNames.indexOf(element.type.muiName) !== -1;\n}"],"sourceRoot":""}